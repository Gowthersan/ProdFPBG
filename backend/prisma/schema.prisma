/// ==============================
/// Prisma – FPBG (schéma renommé et aligné sur PDF)
/// ==============================
/// ✅ CORRIGÉ : Relations et contraintes pour permettre l'enregistrement complet du formulaire
///
/// Changements critiques :
/// 1. Ajout du champ `domaines` dans DemandeSubvention
/// 2. Ajout de contraintes pour garantir l'intégrité des données imbriquées
/// 3. Ajout de champs manquants pour le budget (terrainCfa, investCfa supprimés car non utilisés)
/// 4. Clarification des relations one-to-many et many-to-one

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// ==============================
/// Enums (référentiels fixes, renommés/alignés PDF)
/// ==============================

enum Role {
  UTILISATEUR // Renommé de USER pour français
  ADMINISTRATEUR // Renommé de ADMIN
}

enum TypeOrganisation {
  // Renommé de type, aligné PDF 3.5
  ASSOCIATION
  ONG
  COMMUNAUTE
  COOPERATIVE
  PME
  PMI
  STARTUP
  SECTEUR_PUBLIC // Entités gouvernementales
  RECHERCHE // Organismes de recherche
  PRIVE // Secteur privé
  AUTRE
}

enum StadeProjet {
  // Renommé de ProjectStage
  CONCEPTION
  DEMARRAGE
  AVANCE
  PHASE_FINALE
}

enum TypeBudget {
  // Renommé de BudgetKind
  DIRECT
  INDIRECT
}

enum CleDocument {
  // Renommé de DocumentKey, aligné annexes PDF
  LETTRE_MOTIVATION
  CV
  CERTIFICAT_ENREGISTREMENT
  STATUTS_REGLEMENT
  PV_ASSEMBLEE
  RAPPORTS_FINANCIERS
  RCCM
  AGREMENT
  ETATS_FINANCIERS
  DOCUMENTS_STATUTAIRES
  RIB
  LETTRES_SOUTIEN
  PREUVE_NON_FAILLITE
  CARTOGRAPHIE
  FICHE_CIRCUIT
  BUDGET_DETAILLE
  CHRONOGRAMME
}

enum StatutSoumission {
  // Renommé de SubmissionStatus
  BROUILLON // DRAFT
  SOUMIS // SUBMITTED
  EN_REVUE // UNDER_REVIEW
  APPROUVE // APPROVED
  REJETE // REJECTED
}

enum TypeSoumission {
  // Inchangé, aligné processus PDF (note conceptuelle vs. complète)
  NOTE_CONCEPTUELLE
  PROPOSITION_COMPLETE
}

/// ==============================
/// Auth / Comptes (renommés)
/// ==============================

model Utilisateur {
  id           String  @id @default(uuid())
  email        String  @unique
  hashMotPasse String // Renommé de passwordHash
  prenom       String? // Renommé de firstName
  nom          String? // Renommé de lastName
  telephone    String? // Renommé de phone

  role           Role          @default(UTILISATEUR)
  actif          Boolean       @default(true)
  organisation   Organisation? @relation(fields: [idOrganisation], references: [id], onDelete: SetNull)
  idOrganisation String?

  sessions              Session[]
  soumissions           DemandeSubvention[] // Soumissions faites
  evaluations           Evaluation[] // Évaluations faites
  piecesJointesValidees PieceJointe[]       @relation("ValidateurPieceJointe") // Pièces jointes validées

  creeLe     DateTime @default(now()) // Renommé de createdAt
  misAJourLe DateTime @updatedAt // Renommé de updatedAt

  @@index([idOrganisation])
}

model Session {
  id               String      @id @default(uuid())
  jeton            String      @unique // Renommé de token
  utilisateur      Utilisateur @relation(fields: [idUtilisateur], references: [id], onDelete: Cascade)
  idUtilisateur    String
  agentUtilisateur String? // Renommé de userAgent
  ip               String?
  expireLe         DateTime // Renommé de expiresAt
  creeLe           DateTime    @default(now())

  @@index([idUtilisateur])
}

/// ==============================
/// Référentiels AAP & Thématiques (renommés)
/// ==============================

model TypeSubvention {
  id            Int    @id @default(autoincrement())
  code          String @unique // ex: "PETITE", "MOYENNE"
  libelle       String // Renommé de label
  montantMinCfa BigInt
  montantMaxCfa BigInt
  dureeMaxMois  Int

  appels      AppelProjets[]
  thematiques Thematique[]
}

model AppelProjets {
  // Renommé de AppelAProjet
  id               String          @id @default(cuid())
  code             String          @unique // ex: AAP-OBL-2025
  titre            String
  description      String?
  dateDebut        DateTime
  dateFin          DateTime
  etapes           Json? // Renommé milestones, chronogramme PDF
  typeSubvention   TypeSubvention? @relation(fields: [idTypeSubvention], references: [id], onDelete: SetNull)
  idTypeSubvention Int?

  thematiques   Thematique[]
  organisations LienAppelOrganisation[] // Renommé de AProjetOrganisation
  soumissions   DemandeSubvention[]

  creeLe     DateTime @default(now())
  misAJourLe DateTime @updatedAt

  @@index([idTypeSubvention])
  @@index([dateDebut, dateFin])
}

model Thematique {
  id               String         @id @default(cuid())
  appelProjets     AppelProjets   @relation(fields: [idAppelProjets], references: [id], onDelete: Cascade)
  idAppelProjets   String
  titre            String // Renommé de title
  points           String[]       @default([]) // Renommé de bullets
  ordre            Int            @default(0)
  typeSubvention   TypeSubvention @relation(fields: [idTypeSubvention], references: [id], onDelete: Restrict)
  idTypeSubvention Int

  creeLe     DateTime @default(now())
  misAJourLe DateTime @updatedAt

  @@index([idAppelProjets, idTypeSubvention, ordre])
}

/// ==============================
/// Organisations & rattachements (renommés)
/// ==============================

model Organisation {
  id        String           @id @default(cuid())
  nom       String
  type      TypeOrganisation
  email     String?
  telephone String? // Renommé de phone

  liensAppel   LienAppelOrganisation[]
  projets      DemandeSubvention[]
  utilisateurs Utilisateur[] // Renommé de users

  creeLe     DateTime @default(now())
  misAJourLe DateTime @updatedAt

  @@index([type])
  @@index([nom])
}

model LienAppelOrganisation {
  // Renommé de AProjetOrganisation
  id             String       @id @default(cuid())
  appelProjets   AppelProjets @relation(fields: [idAppelProjets], references: [id], onDelete: Cascade)
  idAppelProjets String
  organisation   Organisation @relation(fields: [idOrganisation], references: [id], onDelete: Cascade)
  idOrganisation String

  statut    String?
  dateDebut DateTime?
  dateFin   DateTime?

  activites Activite[]

  @@unique([idAppelProjets, idOrganisation])
  @@index([idAppelProjets])
  @@index([idOrganisation])
}

/// ==============================
/// Soumission de projet (renommée DemandeSubvention)
/// ==============================
/// ✅ CORRIGÉ : Ajout du champ domaines et simplification du budget

model DemandeSubvention {
  id     String           @id @default(cuid())
  code   String?          @unique
  statut StatutSoumission @default(SOUMIS)

  typeSoumission TypeSoumission      @default(NOTE_CONCEPTUELLE)
  idParent       String?
  parent         DemandeSubvention?  @relation("SoumissionsEnfants", fields: [idParent], references: [id], onDelete: SetNull)
  enfants        DemandeSubvention[] @relation("SoumissionsEnfants")

  appelProjets   AppelProjets? @relation(fields: [idAppelProjets], references: [id], onDelete: SetNull)
  idAppelProjets String?
  organisation   Organisation? @relation(fields: [idOrganisation], references: [id], onDelete: SetNull)
  idOrganisation String?

  soumisPar   Utilisateur? @relation(fields: [idSoumisPar], references: [id], onDelete: SetNull)
  idSoumisPar String?

  // ========================================
  // Étape 1 – Proposition
  // ========================================
  titre                 String
  domaines              String[] @default([]) // ✅ AJOUTÉ : Conservation marine, Restauration des écosystèmes, etc.
  localisation          String // Renommé de location
  groupeCible           String // Renommé de targetGroup
  justificationContexte String // Renommé de contextJustification

  // ========================================
  // Étape 2 – Objectifs & résultats
  // ========================================
  objectifs         String
  resultatsAttendus String // Renommé de expectedResults
  dureeMois         Int // Renommé de durationMonths

  // ========================================
  // Étape 3 – Activités
  // ========================================
  dateDebutActivites DateTime // Renommé de activitiesStartDate
  dateFinActivites   DateTime // Renommé de activitiesEndDate
  resumeActivites    String // Renommé de activitiesSummary

  activites     Activite[] // ✅ Relation one-to-many vers Activite
  risques       Risque[] // ✅ Relation one-to-many vers Risque
  piecesJointes PieceJointe[] // ✅ Relation one-to-many vers PieceJointe

  evaluations  Evaluation[]
  contrat      Contrat?
  rapports     Rapport[]
  cofinanceurs Cofinanceur[]

  // ========================================
  // Étape 5 – Budget (simplifié)
  // ========================================
  tauxUsd           Int     @default(655) // Taux FCFA/USD fixe
  fraisIndirectsCfa Decimal @default(0) @db.Decimal(14, 2) // Frais indirects (≤ 10% du total)

  // ========================================
  // Étape 6 – État & financement
  // ========================================
  stadeProjet        StadeProjet @default(DEMARRAGE)
  aFinancement       Boolean     @default(false)
  detailsFinancement String?
  honneurAccepte     Boolean     @default(false)

  // ========================================
  // Étape 7 – Durabilité
  // ========================================
  texteDurabilite  String
  texteReplication String? // Peut être identique à texteDurabilite

  creeLe     DateTime @default(now())
  misAJourLe DateTime @updatedAt

  @@index([idSoumisPar, creeLe])
  @@index([stadeProjet, statut])
  @@index([idAppelProjets])
  @@index([idOrganisation])
  @@index([typeSoumission])
}

/// ==============================
/// Activités / Sous-activités / Budget (renommés)
/// ==============================
/// ✅ CORRIGÉ : Relations clarifiées pour permettre l'insertion imbriquée

model Activite {
  id        String            @id @default(cuid())
  demande   DemandeSubvention @relation(fields: [idDemande], references: [id], onDelete: Cascade)
  idDemande String

  lienAppelOrganisation   LienAppelOrganisation? @relation(fields: [idLienAppelOrganisation], references: [id], onDelete: SetNull)
  idLienAppelOrganisation String?

  ordre  Int      @default(0)
  titre  String
  debut  DateTime
  fin    DateTime
  resume String

  sousActivites SousActivite[] // ✅ Relation one-to-many
  lignesBudget  LigneBudget[] // ✅ Relation one-to-many

  @@index([idDemande, ordre])
  @@index([idLienAppelOrganisation])
  @@index([debut, fin])
}

model SousActivite {
  id         String   @id @default(cuid())
  activite   Activite @relation(fields: [idActivite], references: [id], onDelete: Cascade)
  idActivite String

  ordre   Int     @default(0)
  libelle String
  resume  String?

  @@index([idActivite, ordre])
}

model LigneBudget {
  id         String   @id @default(cuid())
  activite   Activite @relation(fields: [idActivite], references: [id], onDelete: Cascade)
  idActivite String

  ordre    Int        @default(0)
  libelle  String
  type     TypeBudget @default(DIRECT)
  cfa      Decimal    @db.Decimal(14, 2)
  pctFpbg  Int        @default(100)
  pctCofin Int        @default(0)

  @@index([idActivite, ordre])
}

/// ==============================
/// Risques & Pièces jointes (renommés)
/// ==============================

model Risque {
  id        String            @id @default(cuid())
  demande   DemandeSubvention @relation(fields: [idDemande], references: [id], onDelete: Cascade)
  idDemande String

  ordre       Int    @default(0)
  description String
  mitigation  String

  @@index([idDemande, ordre])
}

model PieceJointe {
  id        String            @id @default(cuid())
  demande   DemandeSubvention @relation(fields: [idDemande], references: [id], onDelete: Cascade)
  idDemande String

  cle          CleDocument
  nomFichier   String
  typeMime     String
  tailleOctets Int
  cleStockage  String // Chemin sur le système de fichiers ou clé S3
  url          String? // URL publique si applicable
  requis       Boolean      @default(false)
  telechargeLe DateTime     @default(now())
  valideLe     DateTime?
  validateur   Utilisateur? @relation("ValidateurPieceJointe", fields: [idValidateur], references: [id], onDelete: SetNull)
  idValidateur String?

  @@unique([idDemande, cle])
  @@index([cle])
  @@index([idValidateur])
}

/// ==============================
/// Suivi post-soumission (renommés)
/// ==============================

model Evaluation {
  id        String            @id @default(cuid())
  demande   DemandeSubvention @relation(fields: [idDemande], references: [id], onDelete: Cascade)
  idDemande String

  evaluateur   Utilisateur @relation(fields: [idEvaluateur], references: [id], onDelete: Restrict)
  idEvaluateur String
  score        Float?
  commentaires String?
  criteres     Json?

  creeLe     DateTime @default(now())
  misAJourLe DateTime @updatedAt

  @@index([idDemande])
  @@index([idEvaluateur])
}

model Contrat {
  id        String            @id @default(cuid())
  demande   DemandeSubvention @relation(fields: [idDemande], references: [id], onDelete: Cascade)
  idDemande String            @unique

  signeLe              DateTime?
  planningDecaissement Json?

  creeLe     DateTime @default(now())
  misAJourLe DateTime @updatedAt

  @@index([idDemande])
}

model Rapport {
  id        String            @id @default(cuid())
  demande   DemandeSubvention @relation(fields: [idDemande], references: [id], onDelete: Cascade)
  idDemande String

  type         String // ex. : "intermediaire", "final"
  dateEcheance DateTime
  soumisLe     DateTime?
  contenu      String?

  creeLe     DateTime @default(now())
  misAJourLe DateTime @updatedAt

  @@index([idDemande, dateEcheance])
}

model Cofinanceur {
  id        String            @id @default(cuid())
  demande   DemandeSubvention @relation(fields: [idDemande], references: [id], onDelete: Cascade)
  idDemande String

  source   String
  montant  Decimal @db.Decimal(14, 2)
  enNature Boolean @default(false)

  creeLe     DateTime @default(now())
  misAJourLe DateTime @updatedAt

  @@index([idDemande])
}

model JournalAudit {
  id            String  @id @default(cuid())
  entite        String // ex. : "DemandeSubvention"
  idEntite      String
  action        String // ex. : "mise_a_jour_statut"
  idUtilisateur String?
  details       Json?

  creeLe DateTime @default(now())

  @@index([entite, idEntite])
  @@index([idUtilisateur])
}

/// ==============================
/// OTP (renommé)
/// ==============================

model Otp {
  id             String   @id @default(cuid())
  nomUtilisateur String
  code           String
  expireLe       DateTime

  creeLe DateTime @default(now())

  @@index([nomUtilisateur])
  @@index([expireLe])
}
